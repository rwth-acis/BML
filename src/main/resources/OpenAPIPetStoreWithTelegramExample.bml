Bot(url="localhost:8080") {

    Components {
        OpenAPI petStore(url="https://petstore3.swagger.io/api/v3/openapi.json")
        Telegram telegram(token="myTelegramToken", nlu="nlu.com/myNLU:8000")
        Slack slack(token="mySlackToken", nlu="nlu.com/myNLU:8000")
        Discord discord(token="myDiscordToken", nlu="nlu.com/myNLU:8000")
        RocketChat rocketChat(token="myRocketChatToken", nlu="nlu.com/myNLU:8000")
        Map subscribedUsers()
    }

    @UserSentMessage // Uses all messenger components
    collectPetId(data) {
        if data.intent == "id" {
            petId = data.entity
            pet = petStore.get(resource="/pet/" + petId)

            if pet.success {
                // If not specified otherwise, send back to user that message was received from
                // send uses all "registered" messengers (see @UserSentMessage)
                send(message="Thank you, I'll keep you posted about {pet.name} with id {petId}")
                subscribedUsers.add(key=data.user, value=data.entity)
            } else {
                send(message="I'm sorry, it seems there is no pet with id {petId}.")
            }
        } else {
           /* Do some dialogue to help user send a pet id */
        }
    }

    @TelegramUserStartedChat // Only allows "registration" on Telegram, alternatively @UserStartedChat uses all messengers
    welcomeUser(data) {
        // Only sends to telegram, as specified by @TelegramUserStartedChat
        // Implicitly sends to user that started chat
        send(message="Hi there!")

        /* Explain bot & tell user to pick a pet (aka id) */
    }

    @Routine(frequency="1h")
    reportPetStatus(data) {
        forEach user, petId in subscribed {
            pet = petStore.get(resource="/pet/" + petId)
            msg = "{data.timeStamp}:\n {pet.name} is **{pet.status}**!"

            // If no @ for a chat event is specified, we use all messengers from components
            send(receiver=user, message=msg)

            // Alternatively for a specific messenger:
            //telegram.send(receiver=user, message=msg)
        }
    }
}
