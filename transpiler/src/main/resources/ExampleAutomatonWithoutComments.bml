Bot(host="localhost", port=8080) {

    OpenAPI pizzaScarf(url="https://pizzascarf.com/api/v3/reviews.json")

    Rasa rasa(url="rasa.com/rasaToken:8000")

    Telegram telegram(token="myTelegramToken")

    Slack slack(token="mySlackToken")

    Discord discord(token="myDiscordToken")

    RocketChat rocketChat(token="myRocketChatToken")

    Dialogue pizzaScarfReview(name="Conversing with a rating bot for PizzaScarf") {
        greetings = ["Hi there, fellow human!", "Hi, nice to meet you!", "Hello, a pleasure to meet you!"]

        notUnderstood = default(intent="_", action="Iâ€™m sorry, I didn't understand that, come again please.")

        greet = initial(intent="hello, greet", action=greetings)
        options = initial(intent="functions, options", action="I'm a simple rating bot, I can submit ratings for you.")

        bye = sink(intent="bye", action="Until next time!")
        stop = sink(intent="stop", action="Until next time!")

        response = {text = "Please provide your receipt ID. You can find it lorem ipsum ...", file = example.jpg}
        addReview = initial(intent="review", action=response)
        giveRating = state(action="How many stars would you like to give?")
        repeat = state(action="Would you like to make another review?")

        addReview -> [
            state(intent="receiptId", action=verifyReceiptId) -> giveRating,
            state(intent="reject", action="Sorry , I didn't get that. Please specify your receipt ID.") -> state(action=jumpTo(state=addReview))
        ]

        giveRating -> [
            state(intent="stars", action=postReview) -> [
                state(intent="yes", action=jumpTo(state=addReview)),
                state(intent="no", action="Okay, thank you. We're looking forward to your next visit!")
            ],
            state(intent="reject", action="Sorry , I didn't get that. Please specify how many stars you would like to give.") -> giveRating
        ]

        @Action
        postReview(context) {
            review = {stars = number(string=context.entity), auth = authKey.file}

            response = pizzaScarf.post(path="/addReview/", body=review)

            if response.code == 200 {
                send(text="Your review was successfully processed!")
            } else {
                send(text="I'm sorry, it seems like there is a problem on our side. Please try again later.")
            }
        }

        @Action
        verifyReceiptId(context) {
            response = pizzaScarf.get(path="/checkReceiptId/", id=context.entity)
            if response.code != 200 {
                send(text="I'm sorry, you didn't provide a valid receipt id.")
            }
        }
    }

    @UserSentMessage
    @UserStartedChat
    messageHandler(context) {
        pizzaScarfReview.step(context=context);
    }
}
