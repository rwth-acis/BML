Bot(host="localhost", port=8080) {

    OpenAPI petStore(url="https://petstore3.swagger.io/api/v3/openapi.json")

    Rasa rasa(url="https://rasa3.tech4comp.dbis.rwth-aachen.de", trainingFile="env:IS_PRIME_TRAINING_DATA_FILE")

    Telegram telegram(botToken="env:TELEGRAM_BOT_TOKEN", botName="TestBMLBot")

    Slack slack(botToken="env:SLACK_BOT_TOKEN", appToken="env:SLACK_APP_TOKEN")

    Dialogue petStoreReview() {
        @Action
        postReview(context) {
            send(text="Your review was successfully processed!")
        }

        addReview = initial(intent="review", action="Please provide your pet ID. You can find it lorem ipsum ...")
        giveRating = state(action="How many stars would you like to give?")

        @Action
        verifyId(context) {
            response = petStore.get(path="/pet/{petId}", petId=number(string=context.entity))
            if response.code != 200 {
                send(text="I'm sorry, you didn't provide a valid pet id.")
                jumpTo(state=addReview)
            } else {
                jumpTo(state=giveRating)
            }
        }

        greetings = ["Hi there, fellow human! ðŸ¤–", "Hi, nice to meet you!", "Hello, pleasure to meet you!", "Hi there! ðŸ‘‹"]

        default(action="Iâ€™m sorry, I didn't understand that, come again please.")

        sink(intent="bye, stop", action="Until next time!")

        sink(intent="thanks", action="You're welcome!")

        initial(intent="_", action="I'm not sure how I can be of your assistance. I can submit reviews for your pets, just let me know if you'd like to do a review.")

        initial(intent="greet", action=greetings)
        initial(intent="functions, options", action="I'm a simple review bot, I can submit reviews for your pets.")

        addReview -> [
            state(intent="number", action=verifyId),
            state(intent="_", action="Sorry, I didn't get that.") -> state(action=jumpTo(state=addReview))
        ]

        giveRating -> [
            state(intent="number", action=postReview) -> state(action="Would you like to make another review?") -> [
                state(intent="yes", action=jumpTo(state=addReview)),
                state(intent="no", action="Okay, thank you. We're looking forward to your next visit!")
            ],
            state(intent="_", action="Sorry, I didn't get that. Please specify how many stars you would like to give.") -> giveRating
        ]
    }

    @UserStartedChat @UserSentMessage @UserLeftChat
    collectPetId(context) {
        petStoreReview.step(context=context);
    }
}
