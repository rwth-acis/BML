plugins {
    id 'java'
    id 'antlr'
    id 'jacoco'
    id 'org.sonarqube' version '3.3'
}

group 'i5.bml'
version '0.1-SNAPSHOT'

repositories {
    mavenCentral()
}

dependencies {
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.9.1'
    testImplementation 'org.junit.jupiter:junit-jupiter-params:5.9.1'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.9.1'

    antlr 'org.antlr:antlr4:4.11.1'

    implementation 'org.antlr:antlr4-runtime:4.11.1'
    implementation 'org.antlr:symtab:1.0.8'
    implementation 'org.reflections:reflections:0.10.2'
    implementation 'io.swagger.parser.v3:swagger-parser:2.1.8'
    implementation 'commons-validator:commons-validator:1.7'
    implementation 'org.eclipse.lsp4j:org.eclipse.lsp4j:0.19.0'
}

test {
    ignoreFailures = true

    useJUnitPlatform()
}

jacocoTestReport {
    dependsOn test

    reports {
        xml.enabled true
        html.outputLocation = layout.buildDirectory.dir('jacocoHtml')
    }

    afterEvaluate {
        classDirectories.setFrom(files(classDirectories.files.collect {
            fileTree(dir: it, exclude: [
                    'generatedParser/**/*',
                    'generated-src/**/*',
                    'default/**/*',
                    '**/Tokens.class'
            ])
        }))
    }
}

/**
 * Without the next section Gradle will add a 'compile' dependency on Antlr3:
 * https://github.com/gradle/gradle/issues/820
 */
configurations {
    compile {
        extendsFrom = extendsFrom.findAll { it != configurations.antlr }
    }
}

generateGrammarSource {
    maxHeapSize = "64m"
    arguments += ["-listener", "-visitor", "-long-messages"]
    outputDirectory = file("${project.buildDir}/generated-src/antlr/main/generatedParser")
}

clean.doLast {
    file("${project.projectDir}/src/main/gen").deleteDir()
    file("${project.projectDir}/src/main/antlr/Tokens.tokens").delete()
    file("${project.projectDir}/src/main/antlr/Literals.tokens").delete()
}
